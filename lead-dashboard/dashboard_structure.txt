# 📁 Estrutura de Pastas - Dashboard MTC

```
dashboard-mtc/
├── 📄 .env.local                    # Variáveis de ambiente (Supabase)
├── 📄 next.config.js
├── 📄 tailwind.config.ts
├── 📄 package.json
├── 📄 tsconfig.json
│
├── 📂 src/
│   ├── 📂 app/                      # App Router (Next.js 14+)
│   │   ├── 📄 layout.tsx            # Layout principal com Sidebar
│   │   ├── 📄 page.tsx              # Dashboard Home (Visão Geral)
│   │   ├── 📄 globals.css           # Estilos globais + Tailwind
│   │   │
│   │   ├── 📂 (auth)/               # Grupo de rotas de autenticação
│   │   │   ├── 📄 layout.tsx        # Layout simples (sem sidebar)
│   │   │   └── 📂 login/
│   │   │       └── 📄 page.tsx      # Página de login
│   │   │
│   │   ├── 📂 (dashboard)/          # Grupo de rotas autenticadas
│   │   │   ├── 📄 layout.tsx        # Layout com Sidebar + Auth check
│   │   │   │
│   │   │   ├── 📂 leads/            # Gestão de Leads
│   │   │   │   ├── 📄 page.tsx      # Lista de leads (tabela)
│   │   │   │   └── 📂 [id]/
│   │   │   │       └── 📄 page.tsx  # Detalhes do lead
│   │   │   │
│   │   │   ├── 📂 elementos/        # Análise por Elemento MTC
│   │   │   │   ├── 📄 page.tsx      # Overview dos 5 elementos
│   │   │   │   └── 📂 [elemento]/
│   │   │   │       └── 📄 page.tsx  # Detalhe de um elemento
│   │   │   │
│   │   │   ├── 📂 respostas/        # Análise de Respostas
│   │   │   │   └── 📄 page.tsx
│   │   │   │
│   │   │   ├── 📂 funil/            # Funil de Vendas
│   │   │   │   └── 📄 page.tsx
│   │   │   │
│   │   │   ├── 📂 equipe/           # Desempenho da Equipe
│   │   │   │   └── 📄 page.tsx
│   │   │   │
│   │   │   ├── 📂 relatorios/       # Relatórios
│   │   │   │   └── 📄 page.tsx
│   │   │   │
│   │   │   └── 📂 configuracoes/    # Configurações
│   │   │       └── 📄 page.tsx
│   │   │
│   │   └── 📂 api/                  # API Routes
│   │       ├── 📂 leads/
│   │       │   ├── 📄 route.ts      # GET /api/leads (lista)
│   │       │   └── 📂 [id]/
│   │       │       └── 📄 route.ts  # GET/PATCH /api/leads/:id
│   │       │
│   │       ├── 📂 stats/
│   │       │   ├── 📄 route.ts      # GET /api/stats (métricas gerais)
│   │       │   └── 📂 elementos/
│   │       │       └── 📄 route.ts  # GET /api/stats/elementos
│   │       │
│   │       └── 📂 export/
│   │           ├── 📄 csv.ts        # POST /api/export/csv
│   │           └── 📄 pdf.ts        # POST /api/export/pdf
│   │
│   ├── 📂 components/               # Componentes React
│   │   ├── 📂 ui/                   # shadcn/ui components
│   │   │   ├── 📄 button.tsx
│   │   │   ├── 📄 card.tsx
│   │   │   ├── 📄 badge.tsx
│   │   │   ├── 📄 table.tsx
│   │   │   ├── 📄 dialog.tsx
│   │   │   ├── 📄 select.tsx
│   │   │   ├── 📄 input.tsx
│   │   │   ├── 📄 label.tsx
│   │   │   ├── 📄 avatar.tsx
│   │   │   └── 📄 ...
│   │   │
│   │   ├── 📂 dashboard/            # Componentes específicos
│   │   │   ├── 📄 Sidebar.tsx       # Navegação lateral
│   │   │   ├── 📄 Header.tsx        # Cabeçalho com user menu
│   │   │   ├── 📄 MetricCard.tsx    # Card de métrica
│   │   │   ├── 📄 ChartCard.tsx     # Card com gráfico
│   │   │   └── 📄 LoadingSkeleton.tsx
│   │   │
│   │   ├── 📂 leads/
│   │   │   ├── 📄 LeadsTable.tsx         # Tabela principal
│   │   │   ├── 📄 LeadFilters.tsx        # Filtros avançados
│   │   │   ├── 📄 LeadDetailsModal.tsx   # Modal de detalhes
│   │   │   ├── 📄 LeadAvatar.tsx         # Avatar colorido por elemento
│   │   │   ├── 📄 PriorityBadge.tsx      # Badge de prioridade
│   │   │   ├── 📄 ScoreBadge.tsx         # Badge de score
│   │   │   └── 📄 WhatsAppButton.tsx     # Botão WhatsApp
│   │   │
│   │   ├── 📂 charts/
│   │   │   ├── 📄 FunnelChart.tsx        # Funil de conversão
│   │   │   ├── 📄 TimelineChart.tsx      # Linha do tempo
│   │   │   ├── 📄 PieChart.tsx           # Pizza (prioridades)
│   │   │   ├── 📄 BarChart.tsx           # Barras (elementos)
│   │   │   └── 📄 MatrixChart.tsx        # Matriz 2x2 (quadrantes)
│   │   │
│   │   └── 📂 elementos/
│   │       ├── 📄 ElementCard.tsx        # Card de elemento MTC
│   │       └── 📄 ElementIcon.tsx        # Ícone com emoji
│   │
│   ├── 📂 lib/                      # Utilitários e configurações
│   │   ├── 📄 supabase.ts           # Cliente Supabase
│   │   ├── 📄 utils.ts              # Funções utilitárias (cn, etc)
│   │   ├── 📄 constants.ts          # Constantes do app
│   │   └── 📄 validators.ts         # Schemas Zod
│   │
│   ├── 📂 hooks/                    # Custom Hooks
│   │   ├── 📄 useLeads.ts           # Hook para buscar leads
│   │   ├── 📄 useStats.ts           # Hook para estatísticas
│   │   ├── 📄 useFilters.ts         # Hook para filtros
│   │   └── 📄 useExport.ts          # Hook para exportação
│   │
│   ├── 📂 types/                    # TypeScript Types
│   │   ├── 📄 database.types.ts     # Tipos do Supabase (gerados)
│   │   ├── 📄 lead.types.ts         # Tipos de Lead
│   │   ├── 📄 elemento.types.ts     # Tipos de Elemento MTC
│   │   └── 📄 stats.types.ts        # Tipos de Estatísticas
│   │
│   └── 📂 services/                 # Lógica de negócio
│       ├── 📄 leadService.ts        # CRUD de leads
│       ├── 📄 statsService.ts       # Cálculo de métricas
│       ├── 📄 exportService.ts      # Exportação CSV/PDF
│       └── 📄 elementoService.ts    # Análise de elementos
│
└── 📂 public/
    ├── 📄 logo.svg
    └── 📄 favicon.ico
```

---

## 📦 Package.json - Dependências

```json
{
  "name": "dashboard-mtc",
  "version": "1.0.0",
  "private": true,
  "scripts": {
    "dev": "next dev",
    "build": "next build",
    "start": "next start",
    "lint": "next lint",
    "type-check": "tsc --noEmit"
  },
  "dependencies": {
    "next": "^14.2.0",
    "react": "^18.3.0",
    "react-dom": "^18.3.0",
    
    "@supabase/supabase-js": "^2.39.0",
    "@supabase/ssr": "^0.0.10",
    
    "@radix-ui/react-avatar": "^1.0.4",
    "@radix-ui/react-dialog": "^1.0.5",
    "@radix-ui/react-dropdown-menu": "^2.0.6",
    "@radix-ui/react-label": "^2.0.2",
    "@radix-ui/react-select": "^2.0.0",
    "@radix-ui/react-slot": "^1.0.2",
    "@radix-ui/react-tabs": "^1.0.4",
    
    "@tanstack/react-table": "^8.11.0",
    
    "recharts": "^2.10.0",
    
    "react-hook-form": "^7.49.0",
    "zod": "^3.22.4",
    "@hookform/resolvers": "^3.3.4",
    
    "date-fns": "^3.0.0",
    "lucide-react": "^0.309.0",
    
    "class-variance-authority": "^0.7.0",
    "clsx": "^2.1.0",
    "tailwind-merge": "^2.2.0",
    "tailwindcss-animate": "^1.0.7",
    
    "papaparse": "^5.4.1",
    "jspdf": "^2.5.1",
    "jspdf-autotable": "^3.8.0"
  },
  "devDependencies": {
    "typescript": "^5.3.0",
    "@types/node": "^20.10.0",
    "@types/react": "^18.2.0",
    "@types/react-dom": "^18.2.0",
    "@types/papaparse": "^5.3.14",
    
    "tailwindcss": "^3.4.0",
    "postcss": "^8.4.0",
    "autoprefixer": "^10.4.0",
    
    "eslint": "^8.56.0",
    "eslint-config-next": "^14.2.0"
  }
}
```

---

## 🔧 Arquivos de Configuração

### `.env.local`
```env
# Supabase (usar as credenciais existentes do projeto Quiz)
NEXT_PUBLIC_SUPABASE_URL=sua_url_supabase
NEXT_PUBLIC_SUPABASE_ANON_KEY=sua_key_supabase

# NextAuth (se usar)
NEXTAUTH_URL=http://localhost:3000
NEXTAUTH_SECRET=gere_um_secret_aqui
```

### `next.config.js`
```javascript
/** @type {import('next').NextConfig} */
const nextConfig = {
  images: {
    remotePatterns: [
      {
        protocol: 'https',
        hostname: '**.supabase.co',
      },
    ],
  },
}

module.exports = nextConfig
```

### `tailwind.config.ts`
```typescript
import type { Config } from 'tailwindcss'

const config: Config = {
  darkMode: ['class'],
  content: [
    './src/pages/**/*.{js,ts,jsx,tsx,mdx}',
    './src/components/**/*.{js,ts,jsx,tsx,mdx}',
    './src/app/**/*.{js,ts,jsx,tsx,mdx}',
  ],
  theme: {
    extend: {
      colors: {
        // Cores do Quiz MTC
        primary: {
          DEFAULT: '#06b6d4', // Cyan
          hover: '#0891b2',
        },
        secondary: {
          DEFAULT: '#3b82f6', // Blue
          hover: '#2563eb',
        },
        // Elementos MTC
        elemento: {
          rim: '#06b6d4',      // Água - Cyan
          figado: '#10b981',   // Madeira - Green
          baco: '#f59e0b',     // Terra - Amber
          coracao: '#ef4444',  // Fogo - Red
          pulmao: '#94a3b8',   // Metal - Slate
        },
      },
    },
  },
  plugins: [require('tailwindcss-animate')],
}

export default config
```

---

## 🚀 Comandos para Iniciar

```bash
# 1. Criar projeto Next.js
npx create-next-app@latest dashboard-mtc --typescript --tailwind --app --use-npm

# 2. Instalar dependências
cd dashboard-mtc
npm install @supabase/supabase-js @supabase/ssr
npm install @radix-ui/react-avatar @radix-ui/react-dialog @radix-ui/react-dropdown-menu
npm install @radix-ui/react-label @radix-ui/react-select @radix-ui/react-slot @radix-ui/react-tabs
npm install @tanstack/react-table recharts
npm install react-hook-form zod @hookform/resolvers
npm install date-fns lucide-react
npm install class-variance-authority clsx tailwind-merge tailwindcss-animate
npm install papaparse jspdf jspdf-autotable
npm install -D @types/papaparse

# 3. Inicializar shadcn/ui
npx shadcn-ui@latest init

# 4. Adicionar componentes shadcn/ui
npx shadcn-ui@latest add button card badge table dialog select input label avatar

# 5. Configurar .env.local com suas credenciais Supabase

# 6. Rodar o projeto
npm run dev
```

---

## 📋 Próximos Passos

1. ✅ **Estrutura criada** - Arquitetura definida
2. ⏭️ **Configurar Supabase** - Cliente e tipos
3. ⏭️ **Criar componentes base** - Sidebar, Header, MetricCard
4. ⏭️ **Implementar Dashboard Home** - Visão geral com métricas
5. ⏭️ **Desenvolver tabela de Leads** - Com filtros e busca
6. ⏭️ **Adicionar gráficos** - Recharts para visualizações
7. ⏭️ **Sistema de exportação** - CSV e PDF
8. ⏭️ **Deploy na Vercel**

**Quer que eu desenvolva algum componente específico agora?** 🚀